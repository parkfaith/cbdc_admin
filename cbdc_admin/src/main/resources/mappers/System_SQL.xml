<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
						"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cbdc.admin.service.impl.SystemDAO">

	<select id="selectUserList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
	  		/* System_SQL.xml selectUserList 
	   		 * 시스템관리 > 사용자 목록 
	   		 */
	   	]]>
		SELECT 
			@i:=@i+1 AS RN
        	 , t.USER_SEQ
			 , t.USER_ID
			 , t.USER_PWD
			 , t.USER_NM
			 , t.AUTH_CODE
			 , t.REG_ID
			 , ( SELECT dui.USER_NM FROM TB_ADM_USER dui WHERE dui.USER_ID = t.REG_ID ) as REG_NM
			 , DATE_FORMAT(t.REG_DATE,'%Y-%m-%d') as REG_DATE
			 , t.UPD_ID
			 , DATE_FORMAT(t.UPD_DATE,'%Y-%m-%d') as UPD_DATE
			 , DATEDIFF(NOW(),REG_DATE ) AS DDIFF
		  FROM TB_ADM_USER t,
		  (SELECT @i:=#{paginCnt}) AS foo
		 WHERE t.DEL_YN = 'N'
		 <if test='searchWord != null and searchWord !=""'>
		 	<if test='searchType eq "USERID"'>
		 		AND (t.USER_ID LIKE CONCAT('%',#{searchWord},'%'))
		 	</if>
		 	<if test='searchType eq "USERNM"'>
		 		AND t.USER_NM LIKE CONCAT('%',#{searchWord},'%')
		 	</if>
		 	<if test='searchType eq "REGID"'>
		 		AND t.REG_ID LIKE CONCAT('%',#{searchWord},'%')
		 	</if>
		 </if>
		 <if test='searchSdate != null and searchSdate !=""'>
		 	AND t.REG_DATE BETWEEN CONCAT(#{searchSdate},' 00:00:00') and CONCAT(#{searchEdate},' 23:59:59')
		 </if>
		 <![CDATA[
			ORDER BY t.USER_SEQ DESC
			   LIMIT #{viewPageCnt} OFFSET #{paginCnt}   
		]]>
	</select>
	
	<select id="selectUserTotalCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		<![CDATA[
	  		/* System_SQL.xml selectUserList 
	   		 * 시스템관리 > 사용자 목록(총 건수)
	   		 */
	   	]]>
	   	SELECT
			COUNT(USER_SEQ) AS USER_TOTCNT
		FROM
			TB_ADM_USER t
		WHERE t.DEL_YN = 'N'
		<if test='searchWord != null and searchWord !=""'>
		 	<if test='searchType eq "USERID"'>
		 		AND (t.USER_ID LIKE CONCAT('%',#{searchWord},'%'))
		 	</if>
		 	<if test='searchType eq "USERNM"'>
		 		AND t.USER_NM LIKE CONCAT('%',#{searchWord},'%')
		 	</if>
		 	<if test='searchType eq "REGID"'>
		 		AND t.REG_ID LIKE CONCAT('%',#{searchWord},'%')
		 	</if>
		 </if>
		 <if test='startSdate != null and startSdate !=""'>
		 	AND t.REG_DATE BETWEEN CONCAT(#{searchSdate},' 00:00:00') and CONCAT(#{searchEdate},' 23:59:59')
		 </if>
	</select>
	
	<insert id="insertUserInfo" parameterType="java.util.HashMap">
    	<![CDATA[
    		/* System_SQL.xml insertUserInfo 
     		 * 사용자 입력 
     		 */
     	]]>
     	
     	<![CDATA[
	    	INSERT INTO TB_ADM_USER (
	    		USER_ID
				 , USER_PWD
				 , USER_NM
				 , AUTH_CODE
				 , REG_ID
				 , REG_DATE
				 , UPD_ID
				 , UPD_DATE
				 , DEL_YN
	    	) VALUES (
	    		 #{userId}
	    		 , #{userPwd}
	    		 , #{userNm}
				 , #{authCode}
				 , #{logUserId}
				 , NOW()
				 , #{logUserId}
				 , NOW()
				 , 'N'
	    	)
    	]]>
    </insert>
    
    <select id="selectUserSeq" parameterType="java.util.HashMap" resultType="java.lang.Integer">
    <![CDATA[
  		/* System_SQL.xml selectUserSeq 
   		 * 사용자 최대 Seq 가지고 오기 
   		 */
   	]]>
        SELECT MAX(USER_SEQ)
		  FROM TB_ADM_USER
    </select>
    
    <select id="checkUserId" parameterType="java.util.HashMap" resultType="java.lang.Integer">
    <![CDATA[
  		/* System_SQL.xml checkUserId 
   		 * 사용자 아이디 중복여부 검사 
   		 */
   	]]>
        SELECT COUNT(USER_SEQ)
		  FROM TB_ADM_USER
		  WHERE USER_ID = #{user_id}
    </select>
    
    <select id="selectUserInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    <![CDATA[
  		/* System_SQL.xml selectUserInfo 
   		 * 사용자 조회 
   		 */
   	]]>
        SELECT t.USER_SEQ
			 , t.USER_ID
			 , t.USER_PWD
			 , t.USER_NM
			 , t.AUTH_CODE
			 , t.REG_ID
			 , t.UPD_ID
			 , ( SELECT dui.USER_NM FROM TB_ADM_USER dui WHERE dui.USER_ID = t.REG_ID ) as REG_NM
			 , DATE_FORMAT(t.REG_DATE,'%Y-%m-%d %H:%i:%s') as REG_DATE
			 , ( SELECT dui.USER_NM FROM TB_ADM_USER dui WHERE dui.USER_ID = t.UPD_ID ) as UPD_NM
			 , DATE_FORMAT(t.UPD_DATE,'%Y-%m-%d %H:%i:%s') as UPD_DATE
		  FROM TB_ADM_USER t
		  WHERE t.USER_SEQ = #{userSeq}	 
    </select>
    
    <update id="deleteUserInfo" parameterType="java.util.HashMap">
    	<![CDATA[
    		/* System_SQL.xml deleteUserInfo 
     		 * 사용자 삭제(del yn 컬럼 업데이트)
     		 */
     	]]>
	    	UPDATE TB_ADM_USER SET
	    	DEL_YN = 'Y'
	    	, UPD_ID = #{logUserId}
	    	, UPD_DATE = NOW()
	    	WHERE USER_SEQ = #{userSeq}	 
    </update>
    
    <update id="updateUserInfo" parameterType="java.util.HashMap">
    	<![CDATA[
    		/* System_SQL.xml updateUserInfo 
     		 * 사용자 수정(이름만 변경)
     		 */
     	]]>
	    	UPDATE TB_ADM_USER SET
	    	USER_NM = #{userNm}
	    	, UPD_ID = #{logUserId}
	    	, UPD_DATE = NOW()
	    	WHERE USER_SEQ = #{userSeq}	 
    </update>
    
    <select id="selectAuthList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
	  		/* System_SQL.xml selectAuthList 
	   		 * 시스템관리 > 권한 목록 
	   		 */
	   	]]>
		SELECT 
			@i:=@i+1 AS RN
        	 , t.AUTH_SEQ
			 , t.AUTH_CODE
			 , t.AUTH_NM
			 , t.AUTH_DESC
			 , t.AUTH_ORDERNO
			 , t.REG_ID
			 , ( SELECT COUNT(USER_SEQ) FROM TB_ADM_USER dui WHERE dui.AUTH_CODE LIKE CONCAT('%',t.AUTH_CODE,'%') AND DEL_YN='N' ) as AUTH_USERCNT
			 , ( SELECT dui.USER_NM FROM TB_ADM_USER dui WHERE dui.USER_ID = t.REG_ID ) as REG_NM
			 , DATE_FORMAT(t.REG_DATE,'%Y-%m-%d') as REG_DATE
			 , t.UPD_ID
			 , DATE_FORMAT(t.UPD_DATE,'%Y-%m-%d') as UPD_DATE
		  FROM TB_ADM_AUTH t,
		  (SELECT @i:=#{paginCnt}) AS foo
		 WHERE t.DEL_YN = 'N'
		 <if test='searchWord != null and searchWord !=""'>
		 	AND t.AUTH_NM LIKE CONCAT('%',#{searchWord},'%')
		 </if>
		 <![CDATA[
			ORDER BY t.AUTH_SEQ DESC
			   LIMIT #{viewPageCnt} OFFSET #{paginCnt}   
		]]>
	</select>
	
	<select id="selectAuthListNoPaging" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
	  		/* System_SQL.xml selectAuthListNoPaging 
	   		 * 시스템관리 > 권한 목록(페이징 없이, 검색 없이-메뉴에서 사용)
	   		 */
	   	]]>
		SELECT 
        	 t.AUTH_SEQ
			 , t.AUTH_CODE
			 , t.AUTH_NM
			 , t.AUTH_DESC
			 , t.AUTH_ORDERNO
			 , t.REG_ID
		  FROM TB_ADM_AUTH t
		 WHERE t.DEL_YN = 'N'
		 <![CDATA[
			ORDER BY t.AUTH_SEQ DESC
		]]>
	</select>
	
	<select id="selectAuthTotalCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		<![CDATA[
	  		/* System_SQL.xml selectAuthTotalCount 
	   		 * 시스템관리 > 권한 목록(총 건수)
	   		 */
	   	]]>
	   	SELECT
			COUNT(AUTH_SEQ) AS AUTH_TOTCNT
		FROM
			TB_ADM_AUTH t
		WHERE t.DEL_YN = 'N'
		<if test='searchWord != null and searchWord !=""'>
		 	AND t.AUTH_NM LIKE CONCAT('%',#{searchWord},'%')
		 </if>
	</select>
	
	<insert id="insertAuthInfo" parameterType="java.util.HashMap">
    	<![CDATA[
    		/* System_SQL.xml insertAuthInfo 
     		 * 사용자 입력 
     		 */
     	]]>
     	
     	<![CDATA[
	    	INSERT INTO TB_ADM_AUTH (
	    		AUTH_CODE
				 , AUTH_NM
				 , AUTH_DESC
				 , AUTH_ORDERNO
				 , REG_ID
				 , REG_DATE
				 , UPD_ID
				 , UPD_DATE
				 , DEL_YN
	    	) VALUES (
	    		 #{authCode}
	    		 , #{authNm}
	    		 , #{authDesc}
				 , #{authOrderNo}
				 , #{logUserId}
				 , NOW()
				 , #{logUserId}
				 , NOW()
				 , 'N'
	    	)
    	]]>
    </insert>
    
    <select id="selectAuthSeq" parameterType="java.util.HashMap" resultType="java.lang.Integer">
    <![CDATA[
  		/* System_SQL.xml selectAuthSeq 
   		 * 사용자 최대 Seq 가지고 오기 
   		 */
   	]]>
        SELECT MAX(AUTH_SEQ)
		  FROM TB_ADM_AUTH
    </select>
    
    <select id="selectAuthInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    <![CDATA[
  		/* System_SQL.xml selectAuthInfo 
   		 * 권한 상세 조회 
   		 */
   	]]>
        SELECT t.AUTH_SEQ
			 , t.AUTH_CODE
			 , t.AUTH_NM
			 , t.AUTH_DESC
			 , t.AUTH_ORDERNO
			 , t.REG_ID
			 , t.UPD_ID
			 , ( SELECT dui.USER_NM FROM TB_ADM_USER dui WHERE dui.USER_ID = t.REG_ID ) as REG_NM
			 , DATE_FORMAT(t.REG_DATE,'%Y-%m-%d %H:%i:%s') as REG_DATE
			 , ( SELECT dui.USER_NM FROM TB_ADM_USER dui WHERE dui.USER_ID = t.UPD_ID ) as UPD_NM
			 , DATE_FORMAT(t.UPD_DATE,'%Y-%m-%d %H:%i:%s') as UPD_DATE
			 , ( SELECT COUNT(USER_SEQ) FROM TB_ADM_USER dui WHERE dui.AUTH_CODE LIKE CONCAT('%',t.AUTH_CODE,'%') AND DEL_YN = 'N' ) as AUTH_USERCNT
		  FROM TB_ADM_AUTH t
		  WHERE t.AUTH_SEQ = #{authSeq}	 
    </select>
    
    <select id="selectAuthInfoFromCode" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    <![CDATA[
  		/* System_SQL.xml selectAuthInfoFromCode 
   		 * 권한 상세 조회 (코드로 검토)
   		 */
   	]]>
        SELECT t.AUTH_SEQ
			 , t.AUTH_CODE
			 , t.AUTH_NM
			 , t.AUTH_DESC
			 , t.AUTH_ORDERNO
			 , t.REG_ID
			 , t.UPD_ID
			 , ( SELECT dui.USER_NM FROM TB_ADM_USER dui WHERE dui.USER_ID = t.REG_ID ) as REG_NM
			 , DATE_FORMAT(t.REG_DATE,'%Y-%m-%d %H:%i:%s') as REG_DATE
			 , ( SELECT dui.USER_NM FROM TB_ADM_USER dui WHERE dui.USER_ID = t.UPD_ID ) as UPD_NM
			 , DATE_FORMAT(t.UPD_DATE,'%Y-%m-%d %H:%i:%s') as UPD_DATE
			 , ( SELECT COUNT(USER_SEQ) FROM TB_ADM_USER dui WHERE dui.AUTH_CODE LIKE CONCAT('%',t.AUTH_CODE,'%') AND DEL_YN = 'N' ) as AUTH_USERCNT
		  FROM TB_ADM_AUTH t
		  WHERE t.AUTH_CODE = #{authCode}	 
    </select>
    
    <select id="selectAuthUserList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
	  		/* System_SQL.xml selectAuthUserList 
	   		 * 권한상세조회 > 권한사용자목록
	   		 */
	   	]]>
		SELECT 
			@i:=@i+1 AS RN
        	 , t.USER_SEQ
			 , t.USER_ID
			 , t.USER_PWD
			 , t.USER_NM
			 , t.AUTH_CODE
			 , t.REG_ID
			 , ( SELECT dui.USER_NM FROM TB_ADM_USER dui WHERE dui.USER_ID = t.REG_ID ) as REG_NM
			 , DATE_FORMAT(t.REG_DATE,'%Y-%m-%d') as REG_DATE
			 , t.UPD_ID
			 , DATE_FORMAT(t.UPD_DATE,'%Y-%m-%d') as UPD_DATE
		  FROM TB_ADM_USER t,
		  (SELECT @i:=#{paginCnt}) AS foo
		 WHERE t.DEL_YN = 'N'
		 AND t.AUTH_CODE LIKE CONCAT('%',#{authCode},'%')
		 <if test='searchWord != null and searchWord !=""'>
		 	<if test='searchType eq "USERID"'>
		 		AND (t.USER_ID LIKE CONCAT('%',#{searchWord},'%'))
		 	</if>
		 	<if test='searchType eq "USERNM"'>
		 		AND t.USER_NM LIKE CONCAT('%',#{searchWord},'%')
		 	</if>
		 </if>
		 <![CDATA[
			ORDER BY t.USER_SEQ DESC
			   LIMIT #{viewPageCnt} OFFSET #{paginCnt}   
		]]>
	</select>
	
	<select id="selectAuthUserTotalCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		<![CDATA[
	  		/* System_SQL.xml selectAuthUserTotalCount 
	   		 * 권한상세조회 > 권한사용자목록 총계
	   		 */
	   	]]>
		SELECT 
			COUNT(t.USER_SEQ) AS AUTHUSER_TOT
		FROM TB_ADM_USER t
		WHERE t.DEL_YN = 'N'
		AND t.AUTH_CODE LIKE CONCAT('%',#{authCode},'%')
		 <if test='searchWord != null and searchWord !=""'>
		 	<if test='searchType eq "USERID"'>
		 		AND (t.USER_ID LIKE CONCAT('%',#{searchWord},'%'))
		 	</if>
		 	<if test='searchType eq "USERNM"'>
		 		AND t.USER_NM LIKE CONCAT('%',#{searchWord},'%')
		 	</if>
		 </if>
	</select>
    
    <update id="deleteAuthInfo" parameterType="java.util.HashMap">
    	<![CDATA[
    		/* System_SQL.xml deleteAuthInfo 
     		 * 권한 삭제(del yn 컬럼 업데이트)
     		 */
     	]]>
	    	UPDATE TB_ADM_AUTH SET
	    	DEL_YN = 'Y'
	    	, UPD_ID = #{logUserId}
	    	, UPD_DATE = NOW()
	    	WHERE AUTH_SEQ = #{authSeq}	 
    </update>
    
    <update id="updateAuthInfo" parameterType="java.util.HashMap">
    	<![CDATA[
    		/* System_SQL.xml updateAuthInfo 
     		 * 사용자 수정(이름만 변경)
     		 */
     	]]>
	    	UPDATE TB_ADM_AUTH SET
	    	AUTH_NM = #{authNm}
	    	, AUTH_DESC = #{authDesc}
	    	, UPD_ID = #{logUserId}
	    	, UPD_DATE = NOW()
	    	WHERE AUTH_SEQ = #{authSeq}	 
    </update>
    
    <update id="insertUserAuthInfo" parameterType="java.util.HashMap">
    	<![CDATA[
    		/* System_SQL.xml insertUserAuthInfo 
     		 * 사용자 권한등록
     		 */
     	]]>
	    	UPDATE TB_ADM_USER SET
	    	AUTH_CODE = CONCAT(AUTH_CODE,',',#{authCode})
	    	, UPD_ID = #{logUserId}
	    	, UPD_DATE = NOW()
	    	WHERE USER_SEQ = #{authUserVal}	 
    </update>
    
    <update id="deleteUserAuthInfo" parameterType="java.util.HashMap">
    	<![CDATA[
    		/* System_SQL.xml deleteUserAuthInfo 
     		 * 사용자 권한삭제
     		 */
     	]]>
	    	UPDATE TB_ADM_USER SET
	    	AUTH_CODE = REPLACE(AUTH_CODE, #{authCode},'')
	    	, UPD_ID = #{logUserId}
	    	, UPD_DATE = NOW()
	    	WHERE USER_SEQ = #{authUserVal}	 
    </update>
    
    <select id="selectMenuListOld" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
	  		/* System_SQL.xml selectMenuList 
	   		 * 시스템관리 > 메뉴목록 조회(예전거...삭제예정)
	   		 */
	   	]]>
		select
			A.MENU_SEQ
			, A.MENU_CODE
			, A.MENU_UPPERCODE
			, A.MENU_NM
			, A.MENU_URL
			, A.MENU_DESC
			, A.MENU_AUTH
			, A.MENU_FUNCAUTH
			, A.MENU_USEYN
			, A.MENU_DEPTH
			, A.MENU_ORDER
			, A.REG_ID
			, A.REG_DATE
			, A.UPD_ID
			, A.UPD_DATE,
			(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOLDER' ELSE 'FILE' END
				FROM   tb_adm_menu TSM2
				WHERE  TSM2.MENU_UPPERCODE = A.MENU_CODE
			) AS NODE_TYPE_NM,
			(SELECT COUNT(1) FROM   tb_adm_menu TSM2
				WHERE  TSM2.MENU_UPPERCODE = A.MENU_CODE
			) AS DOWUNMENU_CNT
		from
			tb_adm_menu A
			left join tb_adm_menu B
			on
			A.MENU_UPPERCODE = B.MENU_CODE
		where
			A.MENU_DEPTH > 1
			and A.MENU_USEYN = 'Y'
		order by
			MENU_CODE,
			MENU_DEPTH ,
			MENU_ORDER
	</select>
	
	<select id="selectMenuList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
	  		/* System_SQL.xml selectMenuList 
	   		 * 시스템관리 > 메뉴목록 조회
	   		 */
	   	]]>
	   	<![CDATA[
		select
			tam.MENU_SEQ
			, tam.MENU_PCODE
			, tam.MENU_NM
			, tam.MENU_URL
			, tam.MENU_DESC
			, tam.MENU_AUTH
			, tam.MENU_FUNCAUTH
			, tam.MENU_USEYN
			, tam.MENU_DEPTH
			, tam.MENU_ORDER
			, tam.REG_ID
			, tam.REG_DATE
			, tam.UPD_ID
			, tam.UPD_DATE,
			(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOLDER' ELSE 'FILE' END
				FROM   tb_adm_menu TSM2
				WHERE  TSM2.MENU_PCODE = tam.MENU_SEQ
			) AS NODE_TYPE_NM,
			(SELECT COUNT(1) FROM   tb_adm_menu TSM2
				WHERE  TSM2.MENU_PCODE = tam.MENU_SEQ
			) AS DOWUNMENU_CNT
		from
			(
			select
				fnc_hierarchi() as id,
				@level as level
			from
				(
				select
					@start_with := 0,
					@id := @start_with,
					@level := 0) vars
			join TB_ADM_MENU
			where
				@id is not null) fnc
		join TB_ADM_MENU tam on
			fnc.id = tam.MENU_SEQ
		]]>
	</select>
	
	<select id="selectMenuInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
	  		/* System_SQL.xml selectMenuInfo 
	   		 * 시스템관리 > 메뉴상세 조회
	   		 */
	   	]]>
		select
			A.MENU_SEQ
			, A.MENU_PCODE
			, A.MENU_NM
			, A.MENU_URL
			, A.MENU_DESC
			, A.MENU_AUTH
			, A.MENU_FUNCAUTH
			, A.MENU_USEYN
			, A.MENU_DEPTH
			, A.MENU_ORDER
			, A.REG_ID
			, ( SELECT dui.USER_NM FROM TB_ADM_USER dui WHERE dui.USER_ID = A.REG_ID ) as REG_NM
			, A.REG_DATE
			, A.UPD_ID
			, ( SELECT dui.USER_NM FROM TB_ADM_USER dui WHERE dui.USER_ID = A.UPD_ID ) as UPD_NM
			, A.UPD_DATE
			, ( SELECT COUNT(1) FROM   tb_adm_menu TSM2 WHERE  TSM2.MENU_PCODE = A.MENU_SEQ) AS CHILDMENU_CNT
		from
			tb_adm_menu A
		where
			A.MENU_SEQ = #{menuSeq}	 
	</select>
	
	<insert id="insertMenuInfo" parameterType="java.util.HashMap">
    	<![CDATA[
    		/* System_SQL.xml insertMenuInfo 
     		 * 메뉴 입력 
     		 */
     	]]>
     	
     	<![CDATA[
	    	INSERT INTO tb_adm_menu (
	    		MENU_PCODE,
				MENU_NM,
				MENU_URL,
				MENU_DESC,
				MENU_AUTH,
				MENU_FUNCAUTH,
				MENU_USEYN,
				MENU_DEPTH,
				MENU_ORDER,
				REG_ID,
				REG_DATE,
				UPD_ID,
				UPD_DATE
	    	) VALUES (
	    		 #{menuPcode}
	    		 , #{menuNm}
	    		 , #{menuUrl}
				 , #{menuDesc}
				 , #{menuAuth}
				 , #{menuFuncauth}
				 , 'Y'
				 , #{menuDepth}
				 , #{menuOrder}
				 , #{logUserId}
				 , NOW()
				 , #{logUserId}
				 , NOW()
	    	)
    	]]>
    </insert>
	
	<update id="updateMenuInfo" parameterType="java.util.HashMap">
    	<![CDATA[
    		/* System_SQL.xml updateMenuInfo 
     		 * 메뉴 정보 수정
     		 */
     	]]>
	    	UPDATE tb_adm_menu SET
	    	MENU_NM = #{menuNm}
	    	, MENU_URL = #{menuUrl}
	    	, MENU_DESC = #{menuDesc}
	    	, MENU_AUTH = #{menuAuth}
	    	, MENU_PCODE = #{menuUppercode}
	    	, UPD_ID = #{logUserId}
	    	, UPD_DATE = NOW()
	    	WHERE MENU_SEQ = #{menuSeq}	 
    </update>
    
    <delete id="deleteMenuInfo" parameterType="java.util.HashMap">
    	<![CDATA[
    		/* System_SQL.xml deleteMenuInfo 
     		 * 메뉴 정보 삭제
     		 */
     	]]>
	    	DELETE FROM tb_adm_menu
	    	WHERE MENU_SEQ = #{menuSeq}
    </delete>
    
    <select id="selectUpperMenuList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
	  		/* System_SQL.xml selectUpperMenuList 
	   		 * 시스템관리 > 상위 메뉴 조회(2depth 메뉴 조회)
	   		 */
	   	]]>
		select
			A.MENU_SEQ
			, A.MENU_PCODE
			, A.MENU_NM
			, A.MENU_URL
			, A.MENU_DESC
			, A.MENU_AUTH
			, A.MENU_FUNCAUTH
			, A.MENU_USEYN
			, A.MENU_DEPTH
			, A.MENU_ORDER
		from
			tb_adm_menu A
		where
			A.MENU_DEPTH = 2
		order by
			MENU_ORDER
	</select>

</mapper>